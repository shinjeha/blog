{"hash":"ccc1fdb6f2e137c3d58940c987b6e7692227e094","data":{"category":{"title":"tomcat","belongsTo":{"edges":[{"node":{"title":"tomcat https apply","path":"/post/2019-06-11-tomcat-https/","date":"11. June 2019","timeToRead":2,"excerpt":"<h2>SSL인증서 발급</h2>\n<p>개인 인증서를 발급받아서 HTTPS통신을 하고자 한다.</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># 개인키 생성</span>\nopenssl genrsa -des3 -out server.key <span class=\"token number\">2048</span>\n\n<span class=\"token comment\"># 인증요청서 생성. (자신의 정보 입력)</span>\nopenssl req -new -key server.key -out server.csr\n\n<span class=\"token comment\"># (선택) 개인키에서 패스워드 제거</span>\n<span class=\"token function\">cp</span> server.key server.key.origin\nopenssl rsa -in server.key.origin -out server.key\n\n<span class=\"token comment\"># 인증서 생성</span>\nopenssl x509 -req -days <span class=\"token number\">3650</span> -in server.csr -signkey server.key -out server.crt\n<span class=\"token comment\"># 여기까지 마치면 서버 인증서인 server.crt파일이 생성된다.</span></code></pre>\n<h2>SSl인증서를 발급받았으면 이제 톰캣에 맞는 형식으로 바꾸어 준다</h2>\n<p>server.crt가 준비된 후 실행</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># 인증서이름(server.crt), 인증서키이름(server.key)를 톰캣에 맞는 형식으로(.keystore) 바꿔줌.</span>\nopenssl pkcs12 -export -in server.crt -inkey server.key -out .keystore -name tomcat</code></pre>\n<h2>톰캣 인증서를 생성했으면 server.xml에서 설정해줘야 한다</h2>\n<pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Connector</span> <span class=\"token attr-name\">port</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>443<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">protocol</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>org.apache.coyote.http11.Http11NioProtocol<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">maxthreads</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>150<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">sslenabled</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">scheme</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">secure</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">clientauth</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>false<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">sslprotocol</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>TLS<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">keystorepass</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>인증서 비밀번호<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">keystorefile</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>인증서 위치<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></code></pre>\n<h2>http로 접속 시 https로 자동 리다이렉트 설정</h2>\n<pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token comment\">&lt;!-- web.xml에 이 부분을 넣으면 된다는 데 제대로 되지 않아서 좀 더 알아봐야 겠다. --></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>security-constraint</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>web-resource-collection</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>web-resource-name</span><span class=\"token punctuation\">></span></span>SSL Forward<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>web-resource-name</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>url-pattern</span><span class=\"token punctuation\">></span></span>/*<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>url-pattern</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>web-resource-collection</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>user-data-constraint</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>transport-guarantee</span><span class=\"token punctuation\">></span></span>CONFIDENTIAL<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>transport-guarantee</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>user-data-constraint</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>security-constraint</span><span class=\"token punctuation\">></span></span></code></pre>\n<p>참고 :</p>\n<ul>\n<li><a href=\"https://zetawiki.com/wiki/%EB%A6%AC%EB%88%85%EC%8A%A4_%EC%9E%90%EC%B2%B4%EC%84%9C%EB%AA%85_SSL_%EC%9D%B8%EC%A6%9D%EC%84%9C_%EC%83%9D%EC%84%B1\">https://zetawiki.com/wiki/%EB%A6%AC%EB%88%85%EC%8A%A4_%EC%9E%90%EC%B2%B4%EC%84%9C%EB%AA%85_SSL_%EC%9D%B8%EC%A6%9D%EC%84%9C_%EC%83%9D%EC%84%B1</a></li>\n<li><a href=\"https://namjackson.tistory.com/25\">https://namjackson.tistory.com/25</a></li>\n<li><a href=\"https://offbyone.tistory.com/262\">https://offbyone.tistory.com/262</a></li>\n</ul>\n<p>@TODO 각각의 명령어가 무슨역할을 하는지 알아보자 ...</p>","category":{"id":"tomcat","title":"tomcat","path":"/category/tomcat/"},"tags":[{"id":"tomcat","title":"tomcat","path":"/tag/tomcat/"}]}}]}}},"context":{}}