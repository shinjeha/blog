{"hash":"ccc1fdb6f2e137c3d58940c987b6e7692227e094","data":{"post":{"title":"javascript shallow copy deep copy","path":"/post/2020-07-08-shallowcopy-deepcopy/","date":"8. July 2020","timeToRead":1,"category":{"id":"javascript","title":"javascript","path":"/category/javascript/"},"tags":[],"content":"<h2 id=\"을-이용한-복사\"><a href=\"#%EC%9D%84-%EC%9D%B4%EC%9A%A9%ED%95%9C-%EB%B3%B5%EC%82%AC\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>=을 이용한 복사</h2>\n<p>javascript에서는 기본 자료형(primitive type)을 복사할 때 값을 완전히 복사한다.</p>\n<p>-> 자료형의 값 복사는 깊은 복사</p>\n<p>반면 객체는 객체의 메모리 주소만 복사한다. (참조 복사)</p>\n<p>-> 객체의 값 복사는 얕은 복사</p>\n<h2 id=\"얕은복사-shallow-copy\"><a href=\"#%EC%96%95%EC%9D%80%EB%B3%B5%EC%82%AC-shallow-copy\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>얕은복사 (shallow copy)</h2>\n<p> = 참조 복사, call by reference</p>\n<h2 id=\"깊은복사-deep-copy\"><a href=\"#%EA%B9%8A%EC%9D%80%EB%B3%B5%EC%82%AC-deep-copy\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>깊은복사 (deep copy)</h2>\n<p> = 값 복사, call by value</p>\n<p>※ <em>angularjs에서는 angular.copy를 하면 Deep copy가 된다.</em></p>\n"},"metadata":{"siteUrl":"http://localhost:8080","utterances":{"repo":"phoenix741/comments.myblog","issueTerm":"title","label":"discussion"}}},"context":{}}