{"hash":"ccc1fdb6f2e137c3d58940c987b6e7692227e094","data":{"posts":{"pageInfo":{"totalPages":2,"currentPage":1},"edges":[{"node":{"id":"3bab7493908520630ef145da4d4ef21f","title":"_id wildcard 검색","date":"31. March 2021","timeToRead":1,"path":"/post/2021-03-31-id-wildcard/","category":{"id":"elasticsearch","title":"elasticsearch","path":"/category/elasticsearch/"},"tags":[],"excerpt":"<h1>_id wildcard로 검색</h1>\n<p>그냥 wildcard 쿼리로 검색하면 에러가 발생하므로 script를 이용한다.</p>\n<pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"query\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"script\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"script\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"doc['_id'][0].indexOf('test_') > -1\"</span>\n\t<span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>"}},{"node":{"id":"f066a5d4f5562e94aa93bc2654f92b0c","title":"javascript shallow copy deep copy","date":"8. July 2020","timeToRead":1,"path":"/post/2020-07-08-shallowcopy-deepcopy/","category":{"id":"javascript","title":"javascript","path":"/category/javascript/"},"tags":[],"excerpt":"<h2>=을 이용한 복사</h2>\n<p>javascript에서는 기본 자료형(primitive type)을 복사할 때 값을 완전히 복사한다.</p><p>-> 자료형의 값 복사는 깊은 복사</p><p>반면 객체는 객체의 메모리 주소만 복사한다. (참조 복사)</p><p>-> 객체의 값 복사는 얕은 복사 ...</p>"}},{"node":{"id":"ad9c24d0eea8c06711e42f938d19d33a","title":"AccessDeniedException error","date":"2. July 2020","timeToRead":1,"path":"/post/2020-07-02-accessdeniedexception/","category":{"id":"elasticsearch","title":"elasticsearch","path":"/category/elasticsearch/"},"tags":[],"excerpt":"<p>Elasticsearch 구동 시 에러가 발생했다.</p>\n<pre class=\"language-console\"><code class=\"language-console\">Exception in thread \"main\" java.nio.file.AccessDeniedException: /tmp/elasticsearch-~~~\n    at ...\n    at ...\n    at ...</code></pre>\n<p>말 그대로 권한 문제.</p><p>크게 두가지 경우로 나뉘는거 같다.</p>\n<h2>1. 파일 권한 문제</h2>\n<pre class=\"language-console\"><code class=\"language-console\">Exception in thread \"main\" java.nio.file.AccessDeniedException: /home/elasticsearch/config/jvm.options\n    at ...\n    at ...\n    at ...</code></pre>\n<p>구체적인 파일명이 적혀 있으면 해당 파일의 권한이 Elasticsearch권한으로 되어있는지 살펴봐야 한다. ...</p>"}},{"node":{"id":"7de79b8c3569fc7dc414b00423b2138f","title":"trim script","date":"27. April 2020","timeToRead":1,"path":"/post/2020-04-27-trim-script/","category":{"id":"elasticsearch","title":"elasticsearch","path":"/category/elasticsearch/"},"tags":[],"excerpt":"<p>keyword필드의 앞, 뒤 공백을 잘라야 할 일이 생겨서 쿼리를 작성해보았다.</p>\n<pre class=\"language-json\"><code class=\"language-json\">GET test_index/_update_by_query\n\n<span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"script\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"inline\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"ctx._source.str_field = ctx._source.str_field.trim();\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"lang\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"painless\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token string\">\"  문 자  열  \"</span>-> <span class=\"token string\">\"문 자  열\"</span></code></pre>"}},{"node":{"id":"6591da10f6862165612dcf01305ed94b","title":"using regexp script in terms aggs","date":"27. April 2020","timeToRead":1,"path":"/post/2020-04-27-terms-aggs-script/","category":{"id":"elasticsearch","title":"elasticsearch","path":"/category/elasticsearch/"},"tags":[],"excerpt":"<p>데이터가 d_100, w_100 이런식으로 저장되어 있었는데,</p><p>d, w따로 나누어서 갯수를 집계해야 할 일이 생겼다.</p><p>어떻게 처리할까 생각하다가 정규식을 이용해서 분리했다.</p>\n<pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"size\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"aggs\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"office\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"terms\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"field\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"office_field\"</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"aggs\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"danger\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token property\">\"terms\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"script\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"String aaa = /_/.split(doc.value_list[0])[0]; if (aaa == 'd') {doc['grp_nm'].value}\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"size\"</span><span class=\"token operator\">:</span> <span class=\"token number\">20</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"aggs\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"warning\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token property\">\"terms\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"script\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"String aaa = /_/.split(doc.value_list[0])[0]; if (aaa == 'w') {doc['grp_nm'].value}\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"size\"</span><span class=\"token operator\">:</span> <span class=\"token number\">20</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>"}},{"node":{"id":"677cd7b95f68de1423259d8ffbc07bb6","title":"Too many dynamic script compilations within error","date":"13. June 2019","timeToRead":1,"path":"/post/2019-06-13-too-many-dynamic-script-compilations-within/","category":{"id":"elasticsearch","title":"elasticsearch","path":"/category/elasticsearch/"},"tags":[],"excerpt":"<h2>Too many dynamic script compilations within 에러</h2>\n<pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"error\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"root_cause\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"circuit_breaking_exception\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"reason\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"[script] Too many dynamic script compilations within, max: [75/5m]; please use indexed, or scripts with parameters instead; this limit can be changed by the [script.max_compilations_rate] setting\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"bytes_wanted\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"bytes_limit\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span>\n    ...\n  <span class=\"token property\">\"status\"</span><span class=\"token operator\">:</span> <span class=\"token number\">400</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>검색 결과 일정시간안에 너무 많은 스크립트가 발생해서 생기는 오류.</p><p>75/5m 으로 세팅되어 있는데 5분에 75개까지의 스크립트를 실행 할 수 있다는 의미.</p><p>공식문서를 찾아보니 스크립트를 사용할 떄 가급적 파라미터를 사용하기를 권장한다.</p>\n<ul>\n<li><a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-scripting-using.html#prefer-params\">https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-scripting-using.html#prefer-params</a></li>\n</ul>\n<p>@TODO 스크립트 캐시 확인</p>"}},{"node":{"id":"d8fc21a650a7f652c9c2951dbbb65d4d","title":"npm lecture note","date":"12. June 2019","timeToRead":2,"path":"/post/2019-06-12-npm/","category":{"id":"npm","title":"npm","path":"/category/npm/"},"tags":[],"excerpt":"<h2>NPM(Node Packge Manager)</h2>\n<p>스마트폰에서 어플을 다운로드 받을 때 플레이스토어에서 다운로드 받듯이, 노드JS에서 동작하는 여러 프로그램(패키지)을 관리해주는게 npm이다.</p>\n<h2>npm 설치 및 실행</h2>\n<p>nodejs를 설치하면 자동으로 설치가 된다.</p>\n<h3>실행</h3>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># 노드, npm 버전 확인</span>\nnode -v\n<span class=\"token function\">npm</span> -v</code></pre>\n<h2>패키지 검색과 설치 그리고 실행</h2>\n<h3>검색</h3>\n<p><a href=\"https://www.npmjs.com/\">https://www.npmjs.com/</a> 에서 원하는 패키지를 찾을 수 있다.</p><p>npm에서 설치하는 프로그램은 2가지 종류 ...</p>"}},{"node":{"id":"6c0866c0d03cae3b834818f9e36b8339","title":"setting .vimrc","date":"11. June 2019","timeToRead":1,"path":"/post/2019-06-10-vimrc/","category":{"id":"vim","title":"vim","path":"/category/vim/"},"tags":[],"excerpt":"<h2>.vimrc경로</h2>\n<p>/home/사용자폴더/.vimrc</p>\n<h2>현재 내 설정</h2>\n<pre class=\"language-vim\"><code class=\"language-vim\"><span class=\"token comment\">\" Syntax Highlighting</span>\n<span class=\"token keyword\">if</span> <span class=\"token function\">has</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"syntax\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token builtin\">syntax</span> <span class=\"token keyword\">on</span>\n<span class=\"token keyword\">endif</span>\n\n<span class=\"token comment\">\" 자동 들여쓰기</span>\n<span class=\"token keyword\">set</span> <span class=\"token builtin\">autoindent</span>\n<span class=\"token keyword\">set</span> <span class=\"token builtin\">cindent</span>\n\n<span class=\"token keyword\">set</span> <span class=\"token keyword\">nu</span> <span class=\"token comment\">\" 줄 번호</span>\n\n<span class=\"token keyword\">set</span> <span class=\"token keyword\">ts</span><span class=\"token operator\">=</span><span class=\"token number\">4</span> <span class=\"token comment\">\" Tab 너비</span>\n\n<span class=\"token keyword\">set</span> <span class=\"token builtin\">shiftwidth</span><span class=\"token operator\">=</span><span class=\"token number\">4</span> <span class=\"token comment\">\" 자동 인덴트할 때 너비</span>\n\n<span class=\"token comment\">\" 마지막으로 수정된 곳에 커서를 위치함</span>\nau BufReadPost <span class=\"token operator\">*</span>\n\\ <span class=\"token keyword\">if</span> <span class=\"token function\">line</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"'\\\") > 0 &amp;&amp; line (\"</span>'\\<span class=\"token string\">\") &lt;= line(\"</span>$<span class=\"token comment\">\") |</span>\n\\ exe <span class=\"token comment\">\"norm g' \\\" |</span>\n\\ <span class=\"token keyword\">endif</span>\n\n<span class=\"token keyword\">set</span> <span class=\"token builtin\">laststatus</span><span class=\"token operator\">=</span><span class=\"token number\">2</span> <span class=\"token comment\">\" 상태바 표시를 항상한다.</span></code></pre>\n<h2>리눅스에서는 각 사용자 폴더에다가 하면 되지만</h2>\n<h3>window에서 .vimrc를 생성</h3>\n<p><strong>C:\\Users\\사용자폴더</strong>에 생성</p>"}},{"node":{"id":"9532d24620e4194dd16a1f80f635b3e5","title":"tomcat https apply","date":"11. June 2019","timeToRead":2,"path":"/post/2019-06-11-tomcat-https/","category":{"id":"tomcat","title":"tomcat","path":"/category/tomcat/"},"tags":[{"id":"tomcat","title":"tomcat","path":"/tag/tomcat/"}],"excerpt":"<h2>SSL인증서 발급</h2>\n<p>개인 인증서를 발급받아서 HTTPS통신을 하고자 한다.</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># 개인키 생성</span>\nopenssl genrsa -des3 -out server.key <span class=\"token number\">2048</span>\n\n<span class=\"token comment\"># 인증요청서 생성. (자신의 정보 입력)</span>\nopenssl req -new -key server.key -out server.csr\n\n<span class=\"token comment\"># (선택) 개인키에서 패스워드 제거</span>\n<span class=\"token function\">cp</span> server.key server.key.origin\nopenssl rsa -in server.key.origin -out server.key\n\n<span class=\"token comment\"># 인증서 생성</span>\nopenssl x509 -req -days <span class=\"token number\">3650</span> -in server.csr -signkey server.key -out server.crt\n<span class=\"token comment\"># 여기까지 마치면 서버 인증서인 server.crt파일이 생성된다.</span></code></pre>\n<h2>SSl인증서를 발급받았으면 이제 톰캣에 맞는 형식으로 바꾸어 준다</h2>\n<p>server.crt가 준비된 후 실행</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># 인증서이름(server.crt), 인증서키이름(server.key)를 톰캣에 맞는 형식으로(.keystore) 바꿔줌.</span>\nopenssl pkcs12 -export -in server.crt -inkey server.key -out .keystore -name tomcat</code></pre>\n<h2>톰캣 인증서를 생성했으면 server.xml에서 설정해줘야 한다</h2>\n<pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Connector</span> <span class=\"token attr-name\">port</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>443<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">protocol</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>org.apache.coyote.http11.Http11NioProtocol<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">maxthreads</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>150<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">sslenabled</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">scheme</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">secure</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">clientauth</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>false<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">sslprotocol</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>TLS<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">keystorepass</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>인증서 비밀번호<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">keystorefile</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>인증서 위치<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></code></pre>\n<h2>http로 접속 시 https로 자동 리다이렉트 설정</h2>\n<pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token comment\">&lt;!-- web.xml에 이 부분을 넣으면 된다는 데 제대로 되지 않아서 좀 더 알아봐야 겠다. --></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>security-constraint</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>web-resource-collection</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>web-resource-name</span><span class=\"token punctuation\">></span></span>SSL Forward<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>web-resource-name</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>url-pattern</span><span class=\"token punctuation\">></span></span>/*<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>url-pattern</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>web-resource-collection</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>user-data-constraint</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>transport-guarantee</span><span class=\"token punctuation\">></span></span>CONFIDENTIAL<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>transport-guarantee</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>user-data-constraint</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>security-constraint</span><span class=\"token punctuation\">></span></span></code></pre>\n<p>참고 :</p>\n<ul>\n<li><a href=\"https://zetawiki.com/wiki/%EB%A6%AC%EB%88%85%EC%8A%A4_%EC%9E%90%EC%B2%B4%EC%84%9C%EB%AA%85_SSL_%EC%9D%B8%EC%A6%9D%EC%84%9C_%EC%83%9D%EC%84%B1\">https://zetawiki.com/wiki/%EB%A6%AC%EB%88%85%EC%8A%A4_%EC%9E%90%EC%B2%B4%EC%84%9C%EB%AA%85_SSL_%EC%9D%B8%EC%A6%9D%EC%84%9C_%EC%83%9D%EC%84%B1</a></li>\n<li><a href=\"https://namjackson.tistory.com/25\">https://namjackson.tistory.com/25</a></li>\n<li><a href=\"https://offbyone.tistory.com/262\">https://offbyone.tistory.com/262</a></li>\n</ul>\n<p>@TODO 각각의 명령어가 무슨역할을 하는지 알아보자 ...</p>"}},{"node":{"id":"837c8a927fddcdfe05f63c9c91672eb8","title":"linux alias","date":"11. June 2019","timeToRead":1,"path":"/post/2019-06-11-alias/","category":{"id":"linux","title":"linux","path":"/category/linux/"},"tags":[],"excerpt":"<h2>.bashrc쉘에 등록</h2>\n<p>alias는 터미널을 껐다가 키면 사라지는데 영구히 저장하고 싶다면 .bashrc쉘에 등록해줘야 한다.</p>\n<pre class=\"language-sh bashrc쉘\"><code class=\"language-sh\"># home디렉토리의 .bashrc쉘 열기($HOME/.bashrc)\n# 난 root계정으로 실행했으므로\nvim /root/.bashrc\n\n# 빈 자리에다가 alias등록\nalias ll='ls -al'</code></pre>\n<p>참고 : <a href=\"https://movenpick.tistory.com/26\">https://movenpick.tistory.com/26</a></p><p>@TODO 사용자 계정으로도 만들어서 테스트해보자</p>"}}]}},"context":{}}